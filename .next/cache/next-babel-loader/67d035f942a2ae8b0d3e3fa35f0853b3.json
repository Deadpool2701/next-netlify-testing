{"ast":null,"code":"import scrollInto from \"scroll-into-view-if-needed\";\nconst elements = {\n  navigationHeightDesktop: \"60px\"\n};\nconst defaultScrollIntoViewOptions = {\n  block: \"nearest\",\n  behavior: \"smooth\",\n  scrollMode: \"if-needed\"\n};\n\nconst scrollIntoViewIfNeeded = (target, options = {\n  delta: `-${elements.navigationHeightDesktop} - 3vh`\n}) => {\n  if (!target) {\n    return;\n  }\n\n  let realTarget = target;\n  let shift = null;\n  const {\n    delta = null,\n    block = defaultScrollIntoViewOptions.block,\n    behavior = defaultScrollIntoViewOptions.behavior,\n    scrollMode = defaultScrollIntoViewOptions.scrollMode\n  } = options || {};\n\n  if (typeof delta === \"string\") {\n    const top = block === \"end\" ? target.offsetHeight + target.offsetTop : target.offsetTop;\n    const value = delta.replace(/ /g, \"\").replace(/\\-/g, \" - \").replace(/\\+/g, \" + \");\n    const operator = value.startsWith(\" -\") ? \"\" : \" + \";\n    shift = `calc(${top}px ${operator} ${value})`;\n  } else if (typeof delta === \"number\") {\n    const top = target.offsetTop;\n    shift = `${top + delta}px`;\n  }\n\n  if (shift) {\n    const div = document.createElement(\"div\");\n    const {\n      style\n    } = div;\n    style.height = \"1px\";\n    style.width = \"1px\";\n    style.top = top + \"px\";\n    style.position = \"absolute\";\n    style.top = shift;\n    const parent = target.offsetParent || target.parentNode;\n    parent.appendChild(div);\n    realTarget = div;\n    setTimeout(() => parent.removeChild(div), 3000);\n  }\n\n  scrollInto(realTarget, {\n    block,\n    behavior,\n    scrollMode\n  });\n};\n\nexport default scrollIntoViewIfNeeded;","map":null,"metadata":{},"sourceType":"module"}