{"ast":null,"code":"import _toConsumableArray from \"C:/Users/THARUN/Desktop/Papersdrop/skionetizy_tools/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/THARUN/Desktop/Papersdrop/skionetizy_tools/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/THARUN/Desktop/Papersdrop/skionetizy_tools/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport scrollIntoViewIfNeeded from \"utils/scroll\";\nimport { FilterMethod } from \"../types\";\nimport { publicFetch } from \"api\";\nimport { toast } from \"react-toastify\";\nvar ELEMENT_ID = \"movies\";\n\nvar initializeFilters = function initializeFilters() {\n  return {\n    year: 2021\n  };\n};\n\nvar useMovies = function useMovies(moviesList) {\n  _s();\n\n  var _useState = useState(moviesList),\n      movies = _useState[0],\n      setMovies = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(10),\n      offset = _useState3[0],\n      setOffset = _useState3[1];\n\n  var _useState4 = useState(initializeFilters()),\n      filters = _useState4[0],\n      setFilters = _useState4[1];\n\n  var handleChangeFilter = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, method) {\n      var value, _yield$publicFetch$ge, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              value = event.target.value;\n              _context.t0 = method;\n              _context.next = _context.t0 === FilterMethod.year ? 5 : 13;\n              break;\n\n            case 5:\n              setFilters({\n                year: parseInt(value)\n              });\n              _context.next = 8;\n              return publicFetch.get(\"/movies?year=\".concat(value));\n\n            case 8:\n              _yield$publicFetch$ge = _context.sent;\n              data = _yield$publicFetch$ge.data;\n              setMovies(data.results);\n              setLoading(false);\n              return _context.abrupt(\"break\", 16);\n\n            case 13:\n              setFilters(initializeFilters());\n              setLoading(false);\n              return _context.abrupt(\"break\", 16);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(), []);\n  var loadMore = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var _yield$publicFetch$ge2, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return publicFetch.get(\"/movies?year=\".concat(filters.year, \"&offset=\").concat(offset));\n\n          case 2:\n            _yield$publicFetch$ge2 = _context2.sent;\n            data = _yield$publicFetch$ge2.data;\n            setOffset(function (prev) {\n              return prev + 10;\n            });\n            setMovies(function (prev) {\n              return [].concat(_toConsumableArray(prev), _toConsumableArray(data.results));\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [offset]);\n  var handleFavorite = useCallback( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref3) {\n      var movie_id, url_path, _yield$publicFetch$po, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              movie_id = _ref3.movie_id, url_path = _ref3.url_path;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return publicFetch.post(\"/movies\", {\n                movie_id: movie_id,\n                url_path: url_path\n              });\n\n            case 4:\n              _yield$publicFetch$po = _context3.sent;\n              data = _yield$publicFetch$po.data;\n\n              if (data.status === \"Success\") {\n                toast(\"Added to your favorite list\");\n              }\n\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 9]]);\n    }));\n\n    return function (_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), []);\n  useEffect(function () {\n    if (!loading) {\n      var _document;\n\n      scrollIntoViewIfNeeded((_document = document) === null || _document === void 0 ? void 0 : _document.getElementById(\"\".concat(ELEMENT_ID, \"-\").concat((movies === null || movies === void 0 ? void 0 : movies.length) - 10)), {\n        scrollMode: \"always\",\n        block: \"start\",\n        behavior: \"smooth\",\n        delta: \"-140px\"\n      });\n    }\n  }, [movies]);\n  return {\n    movies: movies,\n    filters: filters,\n    handleChangeFilter: handleChangeFilter,\n    loadMore: loadMore,\n    loading: loading,\n    handleFavorite: handleFavorite\n  };\n};\n\n_s(useMovies, \"qslcbekjIZ9M3epW2UOBxg01eQE=\");\n\nexport default useMovies;\nexport { ELEMENT_ID };","map":{"version":3,"sources":["C:/Users/THARUN/Desktop/Papersdrop/skionetizy_tools/frontend/src/module/movies/hooks/useMovies.ts"],"names":["useState","useEffect","useCallback","scrollIntoViewIfNeeded","FilterMethod","publicFetch","toast","ELEMENT_ID","initializeFilters","year","useMovies","moviesList","movies","setMovies","loading","setLoading","offset","setOffset","filters","setFilters","handleChangeFilter","event","method","value","target","parseInt","get","data","results","loadMore","prev","handleFavorite","movie_id","url_path","post","status","console","log","document","getElementById","length","scrollMode","block","behavior","delta"],"mappings":"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","sourcesContent":["import { useState, useEffect, ChangeEvent, useCallback } from \"react\";\nimport scrollIntoViewIfNeeded from \"utils/scroll\";\nimport { Filters, FilterMethod } from \"../types\";\nimport { publicFetch } from \"api\";\nimport { toast } from \"react-toastify\";\n\nconst ELEMENT_ID = \"movies\";\n\nconst initializeFilters = () => ({\n  year: 2021,\n});\n\nconst useMovies = (moviesList: any) => {\n  const [movies, setMovies] = useState<any>(moviesList);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [offset, setOffset] = useState<number>(10);\n  const [filters, setFilters] = useState<Filters>(initializeFilters());\n\n  const handleChangeFilter = useCallback(\n    async (event: ChangeEvent<HTMLSelectElement>, method: FilterMethod) => {\n      setLoading(true);\n      const value = event.target.value;\n      switch (method) {\n        case FilterMethod.year:\n          setFilters({ year: parseInt(value) });\n          const { data } = await publicFetch.get(`/movies?year=${value}`);\n          setMovies(data.results);\n          setLoading(false);\n          break;\n\n        default:\n          setFilters(initializeFilters());\n          setLoading(false);\n          break;\n      }\n    },\n    []\n  );\n\n  const loadMore = useCallback(async () => {\n    const { data } = await publicFetch.get(\n      `/movies?year=${filters.year}&offset=${offset}`\n    );\n    setOffset((prev) => prev + 10);\n    setMovies((prev) => [...prev, ...data.results]);\n  }, [offset]);\n\n  const handleFavorite = useCallback(\n    async ({ movie_id, url_path }: { movie_id: number; url_path: string }) => {\n      try {\n        const { data } = await publicFetch.post(\"/movies\", {\n          movie_id,\n          url_path,\n        });\n        if (data.status === \"Success\") {\n          toast(\"Added to your favorite list\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    []\n  );\n\n  useEffect(() => {\n    if (!loading) {\n      scrollIntoViewIfNeeded(\n        document?.getElementById(`${ELEMENT_ID}-${movies?.length - 10}`),\n        {\n          scrollMode: \"always\",\n          block: \"start\",\n          behavior: \"smooth\",\n          delta: \"-140px\",\n        }\n      );\n    }\n  }, [movies]);\n\n  return {\n    movies,\n    filters,\n    handleChangeFilter,\n    loadMore,\n    loading,\n    handleFavorite,\n  };\n};\nexport default useMovies;\nexport { ELEMENT_ID };\n"]},"metadata":{},"sourceType":"module"}