{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport styled from \"styled-components\";\nimport Spinner from \"./Spinner\";\nconst StyledButton = styled.button.withConfig({\n  displayName: \"Button__StyledButton\",\n  componentId: \"sc-1cygf24-0\"\n})([\"position:relative;display:flex;align-items:center;justify-content:center;width:\", \";min-height:40px;padding:0 32px;background:\", \";color:\", \";border-radius:4px;cursor:pointer;outline:none;pointer-events:\", \";font-weight:\", \";font-size:1rem;line-height:1.5rem;border:2px solid transparent;:hover{background-color:\", \";}:disabled{background:\", \";color:\", \";cursor:not-allowed;}\"], ({\n  fullWidth\n}) => fullWidth ? \"100%\" : \"auto\", ({\n  theme\n}) => theme.colors.brand.yellow, ({\n  theme\n}) => theme.colors.brand.black, ({\n  isLoading\n}) => isLoading ? \"none\" : \"auto\", ({\n  theme\n}) => theme.typography.fontWeight.bold, ({\n  theme\n}) => theme.colors.brand.yellowDark, ({\n  theme\n}) => theme.colors.interactive.disabled, ({\n  theme\n}) => theme.colors.gray[\"60\"]);\n\nconst Button = (_ref) => {\n  let {\n    children,\n    isLoading = false,\n    disabled = false,\n    fullWidth = false\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"isLoading\", \"disabled\", \"fullWidth\"]);\n\n  return /*#__PURE__*/_jsx(StyledButton, _objectSpread(_objectSpread({\n    fullWidth: fullWidth,\n    isLoading: isLoading,\n    disabled: disabled,\n    \"aria-busy\": isLoading\n  }, props), {}, {\n    children: isLoading ? /*#__PURE__*/_jsx(Spinner, {}) : children\n  }));\n};\n\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}