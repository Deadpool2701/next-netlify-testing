{"ast":null,"code":"import scrollInto from \"scroll-into-view-if-needed\";\nconst elements = {\n  navigationHeightDesktop: \"60px\"\n};\nconst defaultScrollIntoViewOptions = {\n  block: \"nearest\",\n  behavior: \"smooth\",\n  scrollMode: \"if-needed\"\n};\n\nconst scrollIntoViewIfNeeded = (target, options = {\n  delta: `-${elements.navigationHeightDesktop} - 3vh`\n}) => {\n  if (!target) {\n    return;\n  }\n\n  let realTarget = target;\n  let shift = null;\n  const {\n    delta = null,\n    block = defaultScrollIntoViewOptions.block,\n    behavior = defaultScrollIntoViewOptions.behavior,\n    scrollMode = defaultScrollIntoViewOptions.scrollMode\n  } = options || {};\n\n  if (typeof delta === \"string\") {\n    const top = block === \"end\" ? target.offsetHeight + target.offsetTop : target.offsetTop;\n    const value = delta.replace(/ /g, \"\").replace(/\\-/g, \" - \").replace(/\\+/g, \" + \");\n    const operator = value.startsWith(\" -\") ? \"\" : \" + \";\n    shift = `calc(${top}px ${operator} ${value})`;\n  } else if (typeof delta === \"number\") {\n    const top = target.offsetTop;\n    shift = `${top + delta}px`;\n  }\n\n  if (shift) {\n    const div = document.createElement(\"div\");\n    const {\n      style\n    } = div;\n    style.height = \"1px\";\n    style.width = \"1px\";\n    style.top = top + \"px\";\n    style.position = \"absolute\";\n    style.top = shift;\n    const parent = target.offsetParent || target.parentNode;\n    parent.appendChild(div);\n    realTarget = div;\n    setTimeout(() => parent.removeChild(div), 3000);\n  }\n\n  scrollInto(realTarget, {\n    block,\n    behavior,\n    scrollMode\n  });\n};\n\nexport default scrollIntoViewIfNeeded;","map":{"version":3,"sources":["C:/Users/THARUN/Desktop/Papersdrop/skionetizy_tools/frontend/src/utils/scroll.ts"],"names":["scrollInto","elements","navigationHeightDesktop","defaultScrollIntoViewOptions","block","behavior","scrollMode","scrollIntoViewIfNeeded","target","options","delta","realTarget","shift","top","offsetHeight","offsetTop","value","replace","operator","startsWith","div","document","createElement","style","height","width","position","parent","offsetParent","parentNode","appendChild","setTimeout","removeChild"],"mappings":"AAAA,OAAOA,UAAP,MAAoC,4BAApC;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,uBAAuB,EAAE;AADV,CAAjB;AAIA,MAAMC,4BAAmE,GAAG;AAC1EC,EAAAA,KAAK,EAAE,SADmE;AAE1EC,EAAAA,QAAQ,EAAE,QAFgE;AAG1EC,EAAAA,UAAU,EAAE;AAH8D,CAA5E;;AAMA,MAAMC,sBAAsB,GAAG,CAC7BC,MAD6B,EAE7BC,OAA8C,GAAG;AAC/CC,EAAAA,KAAK,EAAG,IAAGT,QAAQ,CAACC,uBAAwB;AADG,CAFpB,KAK1B;AACH,MAAI,CAACM,MAAL,EAAa;AACX;AACD;;AACD,MAAIG,UAAU,GAAGH,MAAjB;AACA,MAAII,KAAa,GAAG,IAApB;AACA,QAAM;AACJF,IAAAA,KAAK,GAAG,IADJ;AAEJN,IAAAA,KAAK,GAAGD,4BAA4B,CAACC,KAFjC;AAGJC,IAAAA,QAAQ,GAAGF,4BAA4B,CAACE,QAHpC;AAIJC,IAAAA,UAAU,GAAGH,4BAA4B,CAACG;AAJtC,MAKFG,OAAO,IAAI,EALf;;AAOA,MAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAMG,GAAG,GACPT,KAAK,KAAK,KAAV,GACII,MAAM,CAACM,YAAP,GAAsBN,MAAM,CAACO,SADjC,GAEIP,MAAM,CAACO,SAHb;AAIA,UAAMC,KAAK,GAAGN,KAAK,CAChBO,OADW,CACH,IADG,EACG,EADH,EAEXA,OAFW,CAEH,KAFG,EAEI,KAFJ,EAGXA,OAHW,CAGH,KAHG,EAGI,KAHJ,CAAd;AAIA,UAAMC,QAAQ,GAAGF,KAAK,CAACG,UAAN,CAAiB,IAAjB,IAAyB,EAAzB,GAA8B,KAA/C;AACAP,IAAAA,KAAK,GAAI,QAAOC,GAAI,MAAKK,QAAS,IAAGF,KAAM,GAA3C;AACD,GAXD,MAWO,IAAI,OAAON,KAAP,KAAiB,QAArB,EAA+B;AACpC,UAAMG,GAAG,GAAGL,MAAM,CAACO,SAAnB;AACAH,IAAAA,KAAK,GAAI,GAAEC,GAAG,GAAGH,KAAM,IAAvB;AACD;;AACD,MAAIE,KAAJ,EAAW;AACT,UAAMQ,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAYH,GAAlB;AACAG,IAAAA,KAAK,CAACC,MAAN,GAAe,KAAf;AACAD,IAAAA,KAAK,CAACE,KAAN,GAAc,KAAd;AACAF,IAAAA,KAAK,CAACV,GAAN,GAAYA,GAAG,GAAG,IAAlB;AACAU,IAAAA,KAAK,CAACG,QAAN,GAAiB,UAAjB;AACAH,IAAAA,KAAK,CAACV,GAAN,GAAYD,KAAZ;AACA,UAAMe,MAAM,GAAGnB,MAAM,CAACoB,YAAP,IAAuBpB,MAAM,CAACqB,UAA7C;AACAF,IAAAA,MAAM,CAACG,WAAP,CAAmBV,GAAnB;AACAT,IAAAA,UAAU,GAAGS,GAAb;AACAW,IAAAA,UAAU,CAAC,MAAMJ,MAAM,CAACK,WAAP,CAAmBZ,GAAnB,CAAP,EAAgC,IAAhC,CAAV;AACD;;AAEDpB,EAAAA,UAAU,CAACW,UAAD,EAAa;AAAEP,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAb,CAAV;AACD,CAhDD;;AAiDA,eAAeC,sBAAf","sourcesContent":["import scrollInto, { Options } from \"scroll-into-view-if-needed\";\n\nconst elements = {\n  navigationHeightDesktop: \"60px\",\n};\n\nconst defaultScrollIntoViewOptions: Options & { delta?: string | number } = {\n  block: \"nearest\",\n  behavior: \"smooth\",\n  scrollMode: \"if-needed\",\n};\n\nconst scrollIntoViewIfNeeded = (\n  target: HTMLElement,\n  options: Options & { delta?: string | number } = {\n    delta: `-${elements.navigationHeightDesktop} - 3vh`,\n  }\n) => {\n  if (!target) {\n    return;\n  }\n  let realTarget = target;\n  let shift: string = null;\n  const {\n    delta = null,\n    block = defaultScrollIntoViewOptions.block,\n    behavior = defaultScrollIntoViewOptions.behavior,\n    scrollMode = defaultScrollIntoViewOptions.scrollMode,\n  } = options || {};\n\n  if (typeof delta === \"string\") {\n    const top =\n      block === \"end\"\n        ? target.offsetHeight + target.offsetTop\n        : target.offsetTop;\n    const value = delta\n      .replace(/ /g, \"\")\n      .replace(/\\-/g, \" - \")\n      .replace(/\\+/g, \" + \");\n    const operator = value.startsWith(\" -\") ? \"\" : \" + \";\n    shift = `calc(${top}px ${operator} ${value})`;\n  } else if (typeof delta === \"number\") {\n    const top = target.offsetTop;\n    shift = `${top + delta}px`;\n  }\n  if (shift) {\n    const div = document.createElement(\"div\");\n    const { style } = div;\n    style.height = \"1px\";\n    style.width = \"1px\";\n    style.top = top + \"px\";\n    style.position = \"absolute\";\n    style.top = shift;\n    const parent = target.offsetParent || target.parentNode;\n    parent.appendChild(div);\n    realTarget = div;\n    setTimeout(() => parent.removeChild(div), 3000);\n  }\n\n  scrollInto(realTarget, { block, behavior, scrollMode });\n};\nexport default scrollIntoViewIfNeeded;\n"]},"metadata":{},"sourceType":"module"}