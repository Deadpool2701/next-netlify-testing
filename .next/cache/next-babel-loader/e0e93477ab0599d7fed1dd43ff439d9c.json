{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ASUS/App Dev/internship task/skionetizy_tools/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ASUS/App Dev/internship task/skionetizy_tools/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\App Dev\\\\internship task\\\\skionetizy_tools\\\\frontend\\\\src\\\\components\\\\Tool.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport styles from \"./styles/Tool.module.css\";\nimport Image from \"next/image\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Featured from \"./Featured\";\n\nvar Tool = function Tool(props) {\n  _s();\n\n  var inputTextData = {\n    txt: props.Data\n  };\n  var textOneWord;\n  var textTwoWord;\n  var textThreeWord;\n\n  var _useState = useState([]),\n      TextData = _useState[0],\n      setTextData = _useState[1];\n\n  var kdaOutput = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.post(process.env.NEXT_PUBLIC_API_URL, inputTextData);\n\n            case 2:\n              res = _context.sent;\n              setTextData(res.data);\n              console.log(TextData);\n              textOneWord = res.data[2].OneWord;\n              textTwoWord = res.data[3].TwoWord;\n              textThreeWord = res.data[4].ThreeWord;\n              console.log(textTwoWord);\n              console.log(textThreeWord);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function kdaOutput() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    kdaOutput();\n  }, []); //   const dataDisplay = () =>{\n  //     const [TextData, setTextData] = useState([]);\n  //   const kdaOutput = async () => {\n  //     const res = await axios.post(\n  //       process.env.NEXT_PUBLIC_API_URL,\n  //       inputTextData\n  //     );\n  //     setTextData(res.data);\n  //     console.log(TextData);\n  //     let textOneWord = res.data[2].OneWord;\n  //     let textTwoWord = res.data[3].TwoWord;\n  //     let textThreeWord = res.data[4].ThreeWord;\n  //     console.log(textOneWord)\n  //     console.log(textThreeWord)\n  //   };\n  //   useEffect(() => {\n  //     kdaOutput();\n  //   }, []);\n  //     const DisplayDataOne=textOneWord.map(\n  //         (info)=>{\n  //             return(\n  //                 <tr>\n  //                     <td>{info.count}</td>\n  //                     <td>{info.density}</td>\n  //                     <td>{info.keyword}</td>\n  //                 </tr>\n  //             )\n  //         }\n  //     )\n  //     const DisplayDataTwo=textTwoWord.map(\n  //       (info)=>{\n  //           return(\n  //               <tr>\n  //                   <td>{info.count}</td>\n  //                   <td>{info.density}</td>\n  //                   <td>{info.keyword}</td>\n  //               </tr>\n  //           )\n  //       }\n  //   )\n  //   const DisplayDataThree=textThreeWord.map(\n  //     (info)=>{\n  //         return(\n  //             <tr>\n  //                 <td>{info.count}</td>\n  //                 <td>{info.density}</td>\n  //                 <td>{info.keyword}</td>\n  //             </tr>\n  //         )\n  //     }\n  // )\n  //     return(\n  //         <div>\n  //             <table class={styles.analysis_table}>\n  //                   <thead>\n  //                     <tr class={styles.tableheader}>\n  //                       <th>One Word</th>\n  //                       <th>Count</th>\n  //                       <th>Density</th>\n  //                       <th>Two Word</th>\n  //                       <th>Count</th>\n  //                       <th>Density</th>\n  //                       <th>Three Word</th>\n  //                       <th>Count</th>\n  //                       <th>Density</th>\n  //                     </tr>\n  //                   </thead>\n  //                   <tbody>\n  //                     {DisplayDataOne}\n  //                     {DisplayDataTwo}\n  //                     {DisplayDataThree}\n  //                 </tbody>\n  //             </table>\n  //         </div>\n  //     )\n  //  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: TextData.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": styles.heading,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Keyword Density Analyser\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": styles.frequency,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            \"class\": styles.frequency_text,\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [TextData[0].no_of_words, \" Words , \", TextData[1].no_of_chars, \" \", \"Characters\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": styles.textbox,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            \"class\": styles.textbox_text,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: props.Data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": styles.analysis,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: console.log(_this.textOneWord)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Tool, \"CGar4NsqdTgdvjGVnBGkeN+JdMU=\");\n\n_c = Tool;\nexport default Tool;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tool\");","map":{"version":3,"sources":["C:/Users/ASUS/App Dev/internship task/skionetizy_tools/frontend/src/components/Tool.js"],"names":["styles","Image","useState","useEffect","axios","Featured","Tool","props","inputTextData","txt","Data","textOneWord","textTwoWord","textThreeWord","TextData","setTextData","kdaOutput","post","process","env","NEXT_PUBLIC_API_URL","res","data","console","log","OneWord","TwoWord","ThreeWord","length","container","heading","frequency","frequency_text","no_of_words","no_of_chars","textbox","textbox_text","analysis"],"mappings":"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","sourcesContent":["import styles from \"./styles/Tool.module.css\";\nimport Image from \"next/image\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Featured from \"./Featured\";\n\nconst Tool = (props) => {\n  const inputTextData = {\n    txt: props.Data,\n  };\n  let textOneWord;\n  let textTwoWord;\n  let textThreeWord;\n\n  const [TextData, setTextData] = useState([]);\n\n  const kdaOutput = async () => {\n    const res = await axios.post(\n      process.env.NEXT_PUBLIC_API_URL,\n      inputTextData\n    );\n    setTextData(res.data);\n    console.log(TextData);\n    textOneWord = res.data[2].OneWord;\n    textTwoWord = res.data[3].TwoWord;\n    textThreeWord = res.data[4].ThreeWord;\n    console.log(textTwoWord)\n    console.log(textThreeWord)\n  };\n  useEffect(() => {\n    kdaOutput();\n  }, []);\n\n//   const dataDisplay = () =>{\n//     const [TextData, setTextData] = useState([]);\n\n//   const kdaOutput = async () => {\n//     const res = await axios.post(\n//       process.env.NEXT_PUBLIC_API_URL,\n//       inputTextData\n//     );\n//     setTextData(res.data);\n//     console.log(TextData);\n//     let textOneWord = res.data[2].OneWord;\n//     let textTwoWord = res.data[3].TwoWord;\n//     let textThreeWord = res.data[4].ThreeWord;\n//     console.log(textOneWord)\n//     console.log(textThreeWord)\n//   };\n//   useEffect(() => {\n//     kdaOutput();\n//   }, []);\n    \n  \n//     const DisplayDataOne=textOneWord.map(\n//         (info)=>{\n//             return(\n//                 <tr>\n//                     <td>{info.count}</td>\n//                     <td>{info.density}</td>\n//                     <td>{info.keyword}</td>\n//                 </tr>\n//             )\n//         }\n//     )\n//     const DisplayDataTwo=textTwoWord.map(\n//       (info)=>{\n//           return(\n//               <tr>\n//                   <td>{info.count}</td>\n//                   <td>{info.density}</td>\n//                   <td>{info.keyword}</td>\n//               </tr>\n//           )\n//       }\n//   )\n//   const DisplayDataThree=textThreeWord.map(\n//     (info)=>{\n//         return(\n//             <tr>\n//                 <td>{info.count}</td>\n//                 <td>{info.density}</td>\n//                 <td>{info.keyword}</td>\n//             </tr>\n//         )\n//     }\n// )\n \n//     return(\n//         <div>\n//             <table class={styles.analysis_table}>\n//                   <thead>\n//                     <tr class={styles.tableheader}>\n//                       <th>One Word</th>\n//                       <th>Count</th>\n//                       <th>Density</th>\n//                       <th>Two Word</th>\n//                       <th>Count</th>\n//                       <th>Density</th>\n//                       <th>Three Word</th>\n//                       <th>Count</th>\n//                       <th>Density</th>\n//                     </tr>\n//                   </thead>\n\n//                   <tbody>\n                 \n                    \n//                     {DisplayDataOne}\n//                     {DisplayDataTwo}\n//                     {DisplayDataThree}\n                    \n//                 </tbody>\n//             </table>\n             \n//         </div>\n//     )\n   \n//  }\n  \n \n  return (\n    <>\n      {TextData.length && (\n        <div>\n          <div className={styles.container}>\n            <div class={styles.heading}>\n              <h1>Keyword Density Analyser</h1>\n            </div>\n            <div class={styles.frequency}>\n              <div class={styles.frequency_text}>\n                <h2>\n                  {TextData[0].no_of_words} Words , {TextData[1].no_of_chars}{\" \"}\n                  Characters\n                </h2>\n              </div>\n            </div>\n            <div class={styles.textbox}>\n              <div class={styles.textbox_text}>\n                <p>{props.Data}</p>\n              </div>\n            </div>\n            <div class={styles.analysis}>\n              <div>\n                {console.log(this.textOneWord)}\n                {/* <table class={styles.analysis_table}>\n                  <thead>\n                    <tr class={styles.tableheader}>\n                      <th>One Word</th>\n                      <th>Count</th>\n                      <th>Density</th>\n                      <th>Two Word</th>\n                      <th>Count</th>\n                      <th>Density</th>\n                      <th>Three Word</th>\n                      <th>Count</th>\n                      <th>Density</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {}\n                    { <tr class={styles.tablerow}>\n                      <td>{TextData[0].OneWord[0].density}</td>\n                      <td>x</td>\n                      <td>x%</td>\n                      <td>xxxxxxx</td>\n                      <td>x</td>\n                      <td>x%</td>\n                      <td>xxxxxxx</td>\n                      <td>x</td>\n                      <td>x%</td>\n                    </tr> }\n\n                    <tr class={styles.tablerow}>\n                      <td colSpan={9}>Show more</td>\n                    </tr>\n                  </tbody>\n                </table> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Tool;\n"]},"metadata":{},"sourceType":"module"}