{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\App Dev\\\\internship task\\\\skionetizy_tools\\\\frontend\\\\pages\\\\index.tsx\";\nimport PageLayout from \"layout/PageLayout\";\nimport Navigation from \"layout/navigation\";\nimport { publicFetch } from \"api\";\nimport MoviesContent from \"module/movies\";\nimport Footer from \"layout/footer\";\n\nconst Index = props => {\n  var _props$data, _props$data2;\n\n  return /*#__PURE__*/_jsxDEV(PageLayout, {\n    customMetaType: \"movies\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoviesContent, {\n      moviesList: props === null || props === void 0 ? void 0 : (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.results,\n      filterOptions: props.filterOptions,\n      totalMovies: props === null || props === void 0 ? void 0 : (_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticProps = async () => {\n  try {\n    const {\n      data\n    } = await publicFetch.get(\"/movies?year=2021\");\n    const filterOptions = await publicFetch.get(\"/filterOptions\");\n    return {\n      props: {\n        data,\n        filterOptions: filterOptions.data.filterOptions\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    return {\n      props: {}\n    };\n  }\n};\nexport default Index;","map":{"version":3,"sources":["C:/Users/ASUS/App Dev/internship task/skionetizy_tools/frontend/pages/index.tsx"],"names":["PageLayout","Navigation","publicFetch","MoviesContent","Footer","Index","props","data","results","filterOptions","total","getStaticProps","get","err","console","log"],"mappings":";;AACA,OAAOA,UAAP,MAAuB,mBAAvB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,WAAT,QAA4B,KAA5B;AACA,OAAOC,aAAP,MAA0B,eAA1B;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAWA,MAAMC,KAA0B,GAAIC,KAAD,IAAW;AAAA;;AAC5C,sBACE,QAAC,UAAD;AAAY,IAAA,cAAc,EAAC,QAA3B;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AACE,MAAA,UAAU,EAAEA,KAAF,aAAEA,KAAF,sCAAEA,KAAK,CAAEC,IAAT,gDAAE,YAAaC,OAD3B;AAEE,MAAA,aAAa,EAAEF,KAAK,CAACG,aAFvB;AAGE,MAAA,WAAW,EAAEH,KAAF,aAAEA,KAAF,uCAAEA,KAAK,CAAEC,IAAT,iDAAE,aAAaG;AAH5B;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZD;;AAcA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,MAAI;AACF,UAAM;AAAEJ,MAAAA;AAAF,QAAW,MAAML,WAAW,CAACU,GAAZ,CAAgB,mBAAhB,CAAvB;AACA,UAAMH,aAAa,GAAG,MAAMP,WAAW,CAACU,GAAZ,CAAgB,gBAAhB,CAA5B;AAEA,WAAO;AACLN,MAAAA,KAAK,EAAE;AACLC,QAAAA,IADK;AAELE,QAAAA,aAAa,EAAEA,aAAa,CAACF,IAAd,CAAmBE;AAF7B;AADF,KAAP;AAMD,GAVD,CAUE,OAAOI,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAO;AACLP,MAAAA,KAAK,EAAE;AADF,KAAP;AAGD;AACF,CAjBM;AAmBP,eAAeD,KAAf","sourcesContent":["import { NextPage } from \"next\";\r\nimport PageLayout from \"layout/PageLayout\";\r\nimport Navigation from \"layout/navigation\";\r\nimport { publicFetch } from \"api\";\r\nimport MoviesContent from \"module/movies\";\r\nimport Footer from \"layout/footer\";\r\nimport { MovieType } from \"types\";\r\n\r\ntype ShopProps = {\r\n  data: {\r\n    results: MovieType[];\r\n    total: number;\r\n  };\r\n  filterOptions: number[];\r\n};\r\n\r\nconst Index: NextPage<ShopProps> = (props) => {\r\n  return (\r\n    <PageLayout customMetaType=\"movies\">\r\n      <Navigation />\r\n      <MoviesContent\r\n        moviesList={props?.data?.results}\r\n        filterOptions={props.filterOptions}\r\n        totalMovies={props?.data?.total}\r\n      />\r\n      <Footer />\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport const getStaticProps = async () => {\r\n  try {\r\n    const { data } = await publicFetch.get(\"/movies?year=2021\");\r\n    const filterOptions = await publicFetch.get(\"/filterOptions\");\r\n\r\n    return {\r\n      props: {\r\n        data,\r\n        filterOptions: filterOptions.data.filterOptions,\r\n      },\r\n    };\r\n  } catch (err) {\r\n    console.log(err);\r\n    return {\r\n      props: {},\r\n    };\r\n  }\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}