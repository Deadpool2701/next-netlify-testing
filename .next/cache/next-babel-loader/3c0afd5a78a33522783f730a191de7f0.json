{"ast":null,"code":"import scrollInto from \"scroll-into-view-if-needed\";\nvar elements = {\n  navigationHeightDesktop: \"60px\"\n};\nvar defaultScrollIntoViewOptions = {\n  block: \"nearest\",\n  behavior: \"smooth\",\n  scrollMode: \"if-needed\"\n};\n\nvar scrollIntoViewIfNeeded = function scrollIntoViewIfNeeded(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    delta: \"-\".concat(elements.navigationHeightDesktop, \" - 3vh\")\n  };\n\n  if (!target) {\n    return;\n  }\n\n  var realTarget = target;\n  var shift = null;\n\n  var _ref = options || {},\n      _ref$delta = _ref.delta,\n      delta = _ref$delta === void 0 ? null : _ref$delta,\n      _ref$block = _ref.block,\n      block = _ref$block === void 0 ? defaultScrollIntoViewOptions.block : _ref$block,\n      _ref$behavior = _ref.behavior,\n      behavior = _ref$behavior === void 0 ? defaultScrollIntoViewOptions.behavior : _ref$behavior,\n      _ref$scrollMode = _ref.scrollMode,\n      scrollMode = _ref$scrollMode === void 0 ? defaultScrollIntoViewOptions.scrollMode : _ref$scrollMode;\n\n  if (typeof delta === \"string\") {\n    var _top = block === \"end\" ? target.offsetHeight + target.offsetTop : target.offsetTop;\n\n    var value = delta.replace(/ /g, \"\").replace(/\\-/g, \" - \").replace(/\\+/g, \" + \");\n    var operator = value.startsWith(\" -\") ? \"\" : \" + \";\n    shift = \"calc(\".concat(_top, \"px \").concat(operator, \" \").concat(value, \")\");\n  } else if (typeof delta === \"number\") {\n    var _top2 = target.offsetTop;\n    shift = \"\".concat(_top2 + delta, \"px\");\n  }\n\n  if (shift) {\n    var div = document.createElement(\"div\");\n    var style = div.style;\n    style.height = \"1px\";\n    style.width = \"1px\";\n    style.top = top + \"px\";\n    style.position = \"absolute\";\n    style.top = shift;\n    var parent = target.offsetParent || target.parentNode;\n    parent.appendChild(div);\n    realTarget = div;\n    setTimeout(function () {\n      return parent.removeChild(div);\n    }, 3000);\n  }\n\n  scrollInto(realTarget, {\n    block: block,\n    behavior: behavior,\n    scrollMode: scrollMode\n  });\n};\n\nexport default scrollIntoViewIfNeeded;","map":{"version":3,"sources":["C:/Users/Abhirup/Desktop/work/Cloud practice/github downloads/solveerror/CS50-Movie-App/frontend/src/utils/scroll.ts"],"names":["scrollInto","elements","navigationHeightDesktop","defaultScrollIntoViewOptions","block","behavior","scrollMode","scrollIntoViewIfNeeded","target","options","delta","realTarget","shift","top","offsetHeight","offsetTop","value","replace","operator","startsWith","div","document","createElement","style","height","width","position","parent","offsetParent","parentNode","appendChild","setTimeout","removeChild"],"mappings":"AAAA,OAAOA,UAAP,MAAoC,4BAApC;AAEA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,uBAAuB,EAAE;AADV,CAAjB;AAIA,IAAMC,4BAAmE,GAAG;AAC1EC,EAAAA,KAAK,EAAE,SADmE;AAE1EC,EAAAA,QAAQ,EAAE,QAFgE;AAG1EC,EAAAA,UAAU,EAAE;AAH8D,CAA5E;;AAMA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAC7BC,MAD6B,EAK1B;AAAA,MAHHC,OAGG,uEAH8C;AAC/CC,IAAAA,KAAK,aAAMT,QAAQ,CAACC,uBAAf;AAD0C,GAG9C;;AACH,MAAI,CAACM,MAAL,EAAa;AACX;AACD;;AACD,MAAIG,UAAU,GAAGH,MAAjB;AACA,MAAII,KAAa,GAAG,IAApB;;AALG,aAWCH,OAAO,IAAI,EAXZ;AAAA,wBAODC,KAPC;AAAA,MAODA,KAPC,2BAOO,IAPP;AAAA,wBAQDN,KARC;AAAA,MAQDA,KARC,2BAQOD,4BAA4B,CAACC,KARpC;AAAA,2BASDC,QATC;AAAA,MASDA,QATC,8BASUF,4BAA4B,CAACE,QATvC;AAAA,6BAUDC,UAVC;AAAA,MAUDA,UAVC,gCAUYH,4BAA4B,CAACG,UAVzC;;AAaH,MAAI,OAAOI,KAAP,KAAiB,QAArB,EAA+B;AAC7B,QAAMG,IAAG,GACPT,KAAK,KAAK,KAAV,GACII,MAAM,CAACM,YAAP,GAAsBN,MAAM,CAACO,SADjC,GAEIP,MAAM,CAACO,SAHb;;AAIA,QAAMC,KAAK,GAAGN,KAAK,CAChBO,OADW,CACH,IADG,EACG,EADH,EAEXA,OAFW,CAEH,KAFG,EAEI,KAFJ,EAGXA,OAHW,CAGH,KAHG,EAGI,KAHJ,CAAd;AAIA,QAAMC,QAAQ,GAAGF,KAAK,CAACG,UAAN,CAAiB,IAAjB,IAAyB,EAAzB,GAA8B,KAA/C;AACAP,IAAAA,KAAK,kBAAWC,IAAX,gBAAoBK,QAApB,cAAgCF,KAAhC,MAAL;AACD,GAXD,MAWO,IAAI,OAAON,KAAP,KAAiB,QAArB,EAA+B;AACpC,QAAMG,KAAG,GAAGL,MAAM,CAACO,SAAnB;AACAH,IAAAA,KAAK,aAAMC,KAAG,GAAGH,KAAZ,OAAL;AACD;;AACD,MAAIE,KAAJ,EAAW;AACT,QAAMQ,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AADS,QAEDC,KAFC,GAESH,GAFT,CAEDG,KAFC;AAGTA,IAAAA,KAAK,CAACC,MAAN,GAAe,KAAf;AACAD,IAAAA,KAAK,CAACE,KAAN,GAAc,KAAd;AACAF,IAAAA,KAAK,CAACV,GAAN,GAAYA,GAAG,GAAG,IAAlB;AACAU,IAAAA,KAAK,CAACG,QAAN,GAAiB,UAAjB;AACAH,IAAAA,KAAK,CAACV,GAAN,GAAYD,KAAZ;AACA,QAAMe,MAAM,GAAGnB,MAAM,CAACoB,YAAP,IAAuBpB,MAAM,CAACqB,UAA7C;AACAF,IAAAA,MAAM,CAACG,WAAP,CAAmBV,GAAnB;AACAT,IAAAA,UAAU,GAAGS,GAAb;AACAW,IAAAA,UAAU,CAAC;AAAA,aAAMJ,MAAM,CAACK,WAAP,CAAmBZ,GAAnB,CAAN;AAAA,KAAD,EAAgC,IAAhC,CAAV;AACD;;AAEDpB,EAAAA,UAAU,CAACW,UAAD,EAAa;AAAEP,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,QAAQ,EAARA,QAAT;AAAmBC,IAAAA,UAAU,EAAVA;AAAnB,GAAb,CAAV;AACD,CAhDD;;AAiDA,eAAeC,sBAAf","sourcesContent":["import scrollInto, { Options } from \"scroll-into-view-if-needed\";\r\n\r\nconst elements = {\r\n  navigationHeightDesktop: \"60px\",\r\n};\r\n\r\nconst defaultScrollIntoViewOptions: Options & { delta?: string | number } = {\r\n  block: \"nearest\",\r\n  behavior: \"smooth\",\r\n  scrollMode: \"if-needed\",\r\n};\r\n\r\nconst scrollIntoViewIfNeeded = (\r\n  target: HTMLElement,\r\n  options: Options & { delta?: string | number } = {\r\n    delta: `-${elements.navigationHeightDesktop} - 3vh`,\r\n  }\r\n) => {\r\n  if (!target) {\r\n    return;\r\n  }\r\n  let realTarget = target;\r\n  let shift: string = null;\r\n  const {\r\n    delta = null,\r\n    block = defaultScrollIntoViewOptions.block,\r\n    behavior = defaultScrollIntoViewOptions.behavior,\r\n    scrollMode = defaultScrollIntoViewOptions.scrollMode,\r\n  } = options || {};\r\n\r\n  if (typeof delta === \"string\") {\r\n    const top =\r\n      block === \"end\"\r\n        ? target.offsetHeight + target.offsetTop\r\n        : target.offsetTop;\r\n    const value = delta\r\n      .replace(/ /g, \"\")\r\n      .replace(/\\-/g, \" - \")\r\n      .replace(/\\+/g, \" + \");\r\n    const operator = value.startsWith(\" -\") ? \"\" : \" + \";\r\n    shift = `calc(${top}px ${operator} ${value})`;\r\n  } else if (typeof delta === \"number\") {\r\n    const top = target.offsetTop;\r\n    shift = `${top + delta}px`;\r\n  }\r\n  if (shift) {\r\n    const div = document.createElement(\"div\");\r\n    const { style } = div;\r\n    style.height = \"1px\";\r\n    style.width = \"1px\";\r\n    style.top = top + \"px\";\r\n    style.position = \"absolute\";\r\n    style.top = shift;\r\n    const parent = target.offsetParent || target.parentNode;\r\n    parent.appendChild(div);\r\n    realTarget = div;\r\n    setTimeout(() => parent.removeChild(div), 3000);\r\n  }\r\n\r\n  scrollInto(realTarget, { block, behavior, scrollMode });\r\n};\r\nexport default scrollIntoViewIfNeeded;\r\n"]},"metadata":{},"sourceType":"module"}