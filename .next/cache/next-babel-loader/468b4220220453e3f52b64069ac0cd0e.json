{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/THARUN/Desktop/Papersdrop/skionetizy_tools/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/THARUN/Desktop/Papersdrop/skionetizy_tools/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { movieDBFetch } from \"api\";\nvar API_KEY = process.env.NEXT_PUBLIC_THE_MOVIE_DB_API_KEY;\nvar movieDbActions = {\n  getConfig: function () {\n    var _getConfig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return movieDBFetch.get(\"/configuration?api_key=\".concat(API_KEY));\n\n            case 2:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getConfig() {\n      return _getConfig.apply(this, arguments);\n    }\n\n    return getConfig;\n  }(),\n  serachMovie: function () {\n    var _serachMovie = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(movie) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return movieDBFetch.get(\"/search/movie?api_key=\".concat(API_KEY, \"&query=\").concat(movie));\n\n            case 2:\n              res = _context2.sent;\n              return _context2.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function serachMovie(_x) {\n      return _serachMovie.apply(this, arguments);\n    }\n\n    return serachMovie;\n  }(),\n  getImage: function () {\n    var _getImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(movie_id) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return movieDBFetch.get(\"/movie/\".concat(movie_id, \"/images?api_key=\").concat(API_KEY));\n\n            case 2:\n              res = _context3.sent;\n              return _context3.abrupt(\"return\", res);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function getImage(_x2) {\n      return _getImage.apply(this, arguments);\n    }\n\n    return getImage;\n  }()\n};\nexport default movieDbActions;","map":{"version":3,"sources":["C:/Users/THARUN/Desktop/Papersdrop/skionetizy_tools/frontend/src/services/movieDbServices.ts"],"names":["movieDBFetch","API_KEY","process","env","NEXT_PUBLIC_THE_MOVIE_DB_API_KEY","movieDbActions","getConfig","get","res","serachMovie","movie","getImage","movie_id"],"mappings":";;AAAA,SAASA,YAAT,QAA6B,KAA7B;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,gCAA5B;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,SAAS;AAAA,8EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACSN,YAAY,CAACO,GAAb,kCAA2CN,OAA3C,EADT;;AAAA;AACHO,cAAAA,GADG;AAAA,+CAEFA,GAFE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADY;AAKrBC,EAAAA,WAAW;AAAA,gFAAE,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOV,YAAY,CAACO,GAAb,iCACSN,OADT,oBAC0BS,KAD1B,EADP;;AAAA;AACLF,cAAAA,GADK;AAAA,gDAIJA,GAJI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KALU;AAWrBG,EAAAA,QAAQ;AAAA,6EAAE,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUZ,YAAY,CAACO,GAAb,kBACNK,QADM,6BACqBX,OADrB,EADV;;AAAA;AACFO,cAAAA,GADE;AAAA,gDAIDA,GAJC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAXa,CAAvB;AAmBA,eAAeH,cAAf","sourcesContent":["import { movieDBFetch } from \"api\";\n\nconst API_KEY = process.env.NEXT_PUBLIC_THE_MOVIE_DB_API_KEY;\n\nconst movieDbActions = {\n  getConfig: async (): Promise<any> => {\n    const res = await movieDBFetch.get(`/configuration?api_key=${API_KEY}`);\n    return res;\n  },\n  serachMovie: async (movie: string): Promise<any> => {\n    const res = await movieDBFetch.get(\n      `/search/movie?api_key=${API_KEY}&query=${movie}`\n    );\n    return res;\n  },\n  getImage: async (movie_id: number): Promise<any> => {\n    const res = await movieDBFetch.get(\n      `/movie/${movie_id}/images?api_key=${API_KEY}`\n    );\n    return res;\n  },\n};\n\nexport default movieDbActions;\n"]},"metadata":{},"sourceType":"module"}