{"ast":null,"code":"import { movieDBFetch } from \"api\";\nconst API_KEY = process.env.NEXT_PUBLIC_THE_MOVIE_DB_API_KEY;\nconst movieDbActions = {\n  getConfig: async () => {\n    const res = await movieDBFetch.get(`/configuration?api_key=${API_KEY}`);\n    return res;\n  },\n  serachMovie: async movie => {\n    const res = await movieDBFetch.get(`/search/movie?api_key=${API_KEY}&query=${movie}`);\n    return res;\n  },\n  getImage: async movie_id => {\n    const res = await movieDBFetch.get(`/movie/${movie_id}/images?api_key=${API_KEY}`);\n    return res;\n  }\n};\nexport default movieDbActions;","map":{"version":3,"sources":["C:/Users/Abhirup/Desktop/work/Cloud practice/github downloads/solveerror/CS50-Movie-App/frontend/src/services/movieDbServices.ts"],"names":["movieDBFetch","API_KEY","process","env","NEXT_PUBLIC_THE_MOVIE_DB_API_KEY","movieDbActions","getConfig","res","get","serachMovie","movie","getImage","movie_id"],"mappings":"AAAA,SAASA,YAAT,QAA6B,KAA7B;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,gCAA5B;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,SAAS,EAAE,YAA0B;AACnC,UAAMC,GAAG,GAAG,MAAMP,YAAY,CAACQ,GAAb,CAAkB,0BAAyBP,OAAQ,EAAnD,CAAlB;AACA,WAAOM,GAAP;AACD,GAJoB;AAKrBE,EAAAA,WAAW,EAAE,MAAOC,KAAP,IAAuC;AAClD,UAAMH,GAAG,GAAG,MAAMP,YAAY,CAACQ,GAAb,CACf,yBAAwBP,OAAQ,UAASS,KAAM,EADhC,CAAlB;AAGA,WAAOH,GAAP;AACD,GAVoB;AAWrBI,EAAAA,QAAQ,EAAE,MAAOC,QAAP,IAA0C;AAClD,UAAML,GAAG,GAAG,MAAMP,YAAY,CAACQ,GAAb,CACf,UAASI,QAAS,mBAAkBX,OAAQ,EAD7B,CAAlB;AAGA,WAAOM,GAAP;AACD;AAhBoB,CAAvB;AAmBA,eAAeF,cAAf","sourcesContent":["import { movieDBFetch } from \"api\";\r\n\r\nconst API_KEY = process.env.NEXT_PUBLIC_THE_MOVIE_DB_API_KEY;\r\n\r\nconst movieDbActions = {\r\n  getConfig: async (): Promise<any> => {\r\n    const res = await movieDBFetch.get(`/configuration?api_key=${API_KEY}`);\r\n    return res;\r\n  },\r\n  serachMovie: async (movie: string): Promise<any> => {\r\n    const res = await movieDBFetch.get(\r\n      `/search/movie?api_key=${API_KEY}&query=${movie}`\r\n    );\r\n    return res;\r\n  },\r\n  getImage: async (movie_id: number): Promise<any> => {\r\n    const res = await movieDBFetch.get(\r\n      `/movie/${movie_id}/images?api_key=${API_KEY}`\r\n    );\r\n    return res;\r\n  },\r\n};\r\n\r\nexport default movieDbActions;\r\n"]},"metadata":{},"sourceType":"module"}